name: Android APK (build & release)

on:
  # Manual run (choose release tag)
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag (e.g. v0.1.0)'
        required: true
  # Build artifact on pushes to main
  push:
    branches: [ main ]
  # Auto build + release on tag pushes like v1.2.3
  # (keep if you want automatic releases on tags)
  # push:
  #   tags:
  #     - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Ensure Gradle wrapper uses HTTPS
        run: |
          FILE=android/gradle/wrapper/gradle-wrapper.properties
          if grep -R --line-number '^distributionUrl=file:' "$FILE"; then
            echo "::error::Found local 'file:' distributionUrl in $FILE"
            exit 1
          fi

      - name: Make gradlew executable
        working-directory: android
        run: chmod +x ./gradlew

      - name: Build Debug APK
        working-directory: android
        run: ./gradlew --no-daemon assembleDebug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk

  release:
    # Run release job when:
    # - Manually triggered (workflow_dispatch), OR
    # - (optional) a tag push (refs/tags/v*)
    needs: build
    runs-on: ubuntu-latest
    if: >-
      github.event_name == 'workflow_dispatch' ||
      startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: app-debug-apk
          path: dist

      - name: Set tag name
        id: tag
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "value=${{ github.event.inputs.release_tag }}" >> $GITHUB_OUTPUT
          else
            echo "value=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release and attach APK
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.value }}
          name: ${{ steps.tag.outputs.value }}
          files: dist/app-debug.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}